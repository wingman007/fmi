{"ts":1360308924466,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1360308935900,"patch":[[{"diffs":[[1,"<?php\r\nnamespace Album\\Model;\r\n\r\nuse Zend\\Db\\TableGateway\\TableGateway;\r\n\r\nclass AlbumTable\r\n{\r\n    protected $tableGateway;\r\n\r\n    public function __construct(TableGateway $tableGateway)\r\n    {\r\n        $this->tableGateway = $tableGateway;\r\n    }\r\n\r\n    public function fetchAll()\r\n    {\r\n        $resultSet = $this->tableGateway->select();\r\n        return $resultSet;\r\n    }\r\n\r\n    public function getAlbum($id)\r\n    {\r\n        $id  = (int) $id;\r\n        $rowset = $this->tableGateway->select(array('id' => $id));\r\n        $row = $rowset->current();\r\n        if (!$row) {\r\n            throw new \\Exception(\"Could not find row $id\");\r\n        }\r\n        return $row;\r\n    }\r\n\r\n    public function saveAlbum(Album $album)\r\n    {\r\n        $data = array(\r\n            'artist' => $album->artist,\r\n            'title'  => $album->title,\r\n        );\r\n\r\n        $id = (int)$album->id;\r\n        if ($id == 0) {\r\n            $this->tableGateway->insert($data);\r\n        } else {\r\n            if ($this->getAlbum($id)) {\r\n                $this->tableGateway->update($data, array('id' => $id));\r\n            } else {\r\n                throw new \\Exception('Form id does not exist');\r\n            }\r\n        }\r\n    }\r\n\r\n    public function deleteAlbum($id)\r\n    {\r\n        $this->tableGateway->delete(array('id' => $id));\r\n    }\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1320}]],"length":1320,"saved":false}
{"contributors":[],"silentsave":true,"ts":1362077417327,"patch":[[{"diffs":[[0,"<?php"],[-1,"\r"],[0,"\nnamespa"]],"start1":0,"start2":0,"length1":14,"length2":13},{"diffs":[[0,"m\\Model;"],[-1,"\r\n\r"],[1,"\n"],[0,"\nuse Zen"]],"start1":20,"start2":20,"length1":19,"length2":17},{"diffs":[[0,"Gateway;"],[-1,"\r\n\r"],[1,"\n"],[0,"\nclass A"]],"start1":60,"start2":60,"length1":19,"length2":17},{"diffs":[[0,"able"],[-1,"\r"],[0,"\n{"],[-1,"\r"],[0,"\n   "]],"start1":82,"start2":82,"length1":12,"length2":10},{"diffs":[[0,"Gateway;"],[-1,"\r\n\r"],[1,"\n"],[0,"\n    pub"]],"start1":109,"start2":109,"length1":19,"length2":17},{"diffs":[[0,"Gateway)"],[-1,"\r"],[0,"\n    {"],[-1,"\r"],[0,"\n       "]],"start1":170,"start2":170,"length1":24,"length2":22},{"diffs":[[0,"Gateway;"],[-1,"\r"],[0,"\n    }"],[-1,"\r\n\r"],[1,"\n"],[0,"\n    pub"]],"start1":221,"start2":221,"length1":26,"length2":23},{"diffs":[[0,"tchAll()"],[-1,"\r"],[0,"\n    {"],[-1,"\r"],[0,"\n       "]],"start1":259,"start2":259,"length1":24,"length2":22},{"diffs":[[0,"y->select();"],[-1,"\r"],[0,"\n        ret"]],"start1":313,"start2":313,"length1":25,"length2":24},{"diffs":[[0,"sultSet;"],[-1,"\r"],[0,"\n    }"],[-1,"\r\n\r"],[1,"\n"],[0,"\n    pub"]],"start1":344,"start2":344,"length1":26,"length2":23},{"diffs":[[0,"etAlbum($id)"],[-1,"\r"],[0,"\n    {"],[-1,"\r"],[0,"\n        $id"]],"start1":381,"start2":381,"length1":32,"length2":30},{"diffs":[[0,"nt) $id;"],[-1,"\r"],[0,"\n       "]],"start1":417,"start2":417,"length1":17,"length2":16},{"diffs":[[0,"y('id' => $id));"],[-1,"\r"],[0,"\n        $row = "]],"start1":476,"start2":476,"length1":33,"length2":32},{"diffs":[[0,"rrent();"],[-1,"\r"],[0,"\n       "]],"start1":519,"start2":519,"length1":17,"length2":16},{"diffs":[[0,"!$row) {"],[-1,"\r"],[0,"\n       "]],"start1":540,"start2":540,"length1":17,"length2":16},{"diffs":[[0,"w $id\");"],[-1,"\r"],[0,"\n       "]],"start1":600,"start2":600,"length1":17,"length2":16},{"diffs":[[0,"$id\");\n        }"],[-1,"\r"],[0,"\n        return "]],"start1":602,"start2":602,"length1":33,"length2":32},{"diffs":[[0,"rn $row;"],[-1,"\r"],[0,"\n    }"],[-1,"\r\n\r"],[1,"\n"],[0,"\n    pub"]],"start1":631,"start2":631,"length1":26,"length2":23},{"diffs":[[0," $album)"],[-1,"\r"],[0,"\n    {"],[-1,"\r"],[0,"\n       "]],"start1":682,"start2":682,"length1":24,"length2":22},{"diffs":[[0,"= array("],[-1,"\r"],[0,"\n       "]],"start1":711,"start2":711,"length1":17,"length2":16},{"diffs":[[0,">artist,"],[-1,"\r"],[0,"\n       "]],"start1":751,"start2":751,"length1":17,"length2":16},{"diffs":[[0,"->title,"],[-1,"\r"],[0,"\n       "]],"start1":790,"start2":790,"length1":17,"length2":16},{"diffs":[[0,"      );"],[-1,"\r\n\r"],[1,"\n"],[0,"\n       "]],"start1":801,"start2":801,"length1":19,"length2":17},{"diffs":[[0,"bum->id;"],[-1,"\r"],[0,"\n       "]],"start1":833,"start2":833,"length1":17,"length2":16},{"diffs":[[0," == 0) {"],[-1,"\r"],[0,"\n       "]],"start1":857,"start2":857,"length1":17,"length2":16},{"diffs":[[0,"($data);"],[-1,"\r"],[0,"\n       "]],"start1":905,"start2":905,"length1":17,"length2":16},{"diffs":[[0,"        } else {"],[-1,"\r"],[0,"\n            if "]],"start1":914,"start2":914,"length1":33,"length2":32},{"diffs":[[0,"($id)) {"],[-1,"\r"],[0,"\n       "]],"start1":962,"start2":962,"length1":17,"length2":16},{"diffs":[[0,"d' => $id));"],[-1,"\r"],[0,"\n           "]],"start1":1030,"start2":1030,"length1":25,"length2":24},{"diffs":[[0,"} else {"],[-1,"\r"],[0,"\n       "]],"start1":1055,"start2":1055,"length1":17,"length2":16},{"diffs":[[0,"exist');"],[-1,"\r"],[0,"\n       "]],"start1":1119,"start2":1119,"length1":17,"length2":16},{"diffs":[[0,"           }"],[-1,"\r"],[0,"\n        }\r\n"]],"start1":1129,"start2":1129,"length1":25,"length2":24},{"diffs":[[0,"   }"],[-1,"\r"],[0,"\n    }"],[-1,"\r\n\r"],[1,"\n"],[0,"\n   "]],"start1":1147,"start2":1147,"length1":18,"length2":15},{"diffs":[[0,"$id)"],[-1,"\r"],[0,"\n    {"],[-1,"\r"],[0,"\n   "]],"start1":1191,"start2":1191,"length1":16,"length2":14},{"diffs":[[0,"d));"],[-1,"\r"],[0,"\n    }"],[-1,"\r"],[1,"\n=======\n<?php\nnamespace Album\\Model;\n\nuse Zend\\Db\\TableGateway\\TableGateway;\n\nclass AlbumTable\n{\n    protected $tableGateway;\n\n    public function __construct(TableGateway $tableGateway)\n    {\n        $this->tableGateway = $tableGateway;\n    }\n\n    public function fetchAll()\n    {\n        $resultSet = $this->tableGateway->select();\n        return $resultSet;\n    }\n\n    public function getAlbum($id)\n    {\n        $id  = (int) $id;\n        $rowset = $this->tableGateway->select(array('id' => $id));\n        $row = $rowset->current();\n        if (!$row) {\n            throw new \\Exception(\"Could not find row $id\");\n        }\n        return $row;\n    }\n\n    public function saveAlbum(Album $album)\n    {\n        $data = array(\n            'artist' => $album->artist,\n            'title'  => $album->title,\n        );\n\n        $id = (int)$album->id;\n        if ($id == 0) {\n            $this->tableGateway->insert($data);\n        } else {\n            if ($this->getAlbum($id)) {\n                $this->tableGateway->update($data, array('id' => $id));\n            } else {\n                throw new \\Exception('Form id does not exist');\n            }\n        }\n    }\n\n    public function deleteAlbum($id)\n    {\n        $this->tableGateway->delete(array('id' => $id));\n    }\n>>>>>>> e6069389b80e7d3f1e0b75bd0fd59d987ac36951"],[0,"\n}"]],"start1":1254,"start2":1254,"length1":14,"length2":1334}]],"length":2588,"saved":false}
{"ts":1362077423319,"patch":[[{"diffs":[[0,"  }\n"],[-1,"=======\n<?php\nnamespace Album\\Model;\n\nuse Zend\\Db\\TableGateway\\TableGateway;\n\nclass AlbumTable\n{\n    protected $tableGateway;\n\n    public function __construct(TableGateway $tableGateway)\n    {\n        $this->tableGateway = $tableGateway;\n    }\n\n    public function fetchAll()\n    {\n        $resultSet = $this->tableGateway->select();\n        return $resultSet;\n    }\n\n    public function getAlbum($id)\n    {\n        $id  = (int) $id;\n        $rowset = $this->tableGateway->select(array('id' => $id));\n        $row = $rowset->current();\n        if (!$row) {\n            throw new \\Exception(\"Could not find row $id\");\n        }\n        return $row;\n    }\n\n    public function saveAlbum(Album $album)\n    {\n        $data = array(\n            'artist' => $album->artist,\n            'title'  => $album->title,\n        );\n\n        $id = (int)$album->id;\n        if ($id == 0) {\n            $this->tableGateway->insert($data);\n        } else {\n            if ($this->getAlbum($id)) {\n                $this->tableGateway->update($data, array('id' => $id));\n            } else {\n                throw new \\Exception('Form id does not exist');\n            }\n        }\n    }\n\n    public function deleteAlbum($id)\n    {\n        $this->tableGateway->delete(array('id' => $id));\n    }\n>>>>>>> e6069389b80e7d3f1e0b75bd0fd59d987ac36951\n"],[0,"}"]],"start1":1261,"start2":1261,"length1":1327,"length2":5}]],"length":1266,"saved":false}
