{"ts":1360308839509,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1360308841555,"patch":[[{"diffs":[[1,"<?php\r\nnamespace Album\\Model;\r\n\r\nclass Album\r\n{\r\n    public $id;\r\n    public $artist;\r\n    public $title;\r\n\r\n    public function exchangeArray($data)\r\n    {\r\n        $this->id     = (isset($data['id'])) ? $data['id'] : null;\r\n        $this->artist = (isset($data['artist'])) ? $data['artist'] : null;\r\n        $this->title  = (isset($data['title'])) ? $data['title'] : null;\r\n    }\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":384}]],"length":384,"saved":false}
{"ts":1360309020050,"patch":[[{"diffs":[[0,"del;\r\n\r\n"],[1,"use Album\\Model\\Album;\r\nuse Album\\Model\\AlbumTable;\r\nuse Zend\\Db\\ResultSet\\ResultSet;\r\nuse Zend\\Db\\TableGateway\\TableGateway;\r\n\r\n"],[0,"class Al"]],"start1":25,"start2":25,"length1":16,"length2":145}]],"length":513,"saved":false}
{"ts":1360309026224,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"use Album\\Model\\Album;\r\nuse Album\\Model\\AlbumTable;\r\nuse Zend\\Db\\ResultSet\\ResultSet;\r\nuse Zend\\Db\\TableGateway\\TableGateway;\r\n"],[0,"\r\ncl"]],"start1":29,"start2":29,"length1":135,"length2":8}]],"length":386,"saved":false}
{"ts":1360309028091,"patch":[[{"diffs":[[0,"del;\r\n\r\n"],[-1,"\r\n"],[0,"class Al"]],"start1":25,"start2":25,"length1":18,"length2":16}]],"length":384,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362077446506,"patch":[[{"diffs":[[0,"<?php"],[-1,"\r"],[0,"\nnamespa"]],"start1":0,"start2":0,"length1":14,"length2":13},{"diffs":[[0,"del;"],[-1,"\r\n\r\nclass Album\r"],[1,"\n\nuse Zend\\InputFilter\\Factory as InputFactory; // <-- Add this import\nuse Zend\\InputFilter\\InputFilter; // <-- Add this import\nuse Zend\\InputFilter\\InputFilterAwareInterface; // <-- Add this import\nuse Zend\\InputFilter\\InputFilterInterface; // <-- Add this import\n\nclass Album implements InputFilterAwareInterface"],[0,"\n{"],[-1,"\r"],[0,"\n   "]],"start1":24,"start2":24,"length1":27,"length2":324},{"diffs":[[0,"lic $id;"],[-1,"\r"],[0,"\n    pub"]],"start1":352,"start2":352,"length1":17,"length2":16},{"diffs":[[0,"$artist;"],[-1,"\r"],[0,"\n    pub"]],"start1":372,"start2":372,"length1":17,"length2":16},{"diffs":[[0,"tle;"],[-1,"\r\n\r"],[1,"\n    protected $inputFilter; // <-- Add this variable\n"],[0,"\n   "]],"start1":395,"start2":395,"length1":11,"length2":62},{"diffs":[[0,"ata)"],[-1,"\r"],[0,"\n    {"],[-1,"\r"],[0,"\n   "]],"start1":490,"start2":490,"length1":16,"length2":14},{"diffs":[[0,"his->id "],[-1,"    "],[0,"= (isset"]],"start1":511,"start2":511,"length1":20,"length2":16},{"diffs":[[0,"ta['id'] : null;"],[-1,"\r"],[0,"\n        $this->"]],"start1":547,"start2":547,"length1":33,"length2":32},{"diffs":[[0,"st'] : null;"],[-1,"\r"],[0,"\n        $th"]],"start1":626,"start2":626,"length1":25,"length2":24},{"diffs":[[0,"->title "],[-1," "],[0,"= (isset"]],"start1":652,"start2":652,"length1":17,"length2":16},{"diffs":[[0,"ull;"],[-1,"\r\n    }\r"],[1,"\n    }\n  \n    // Add the following method:\n    public function getArrayCopy()\n    {\n        return get_object_vars($this);\n    }\n\n    // Add content to this method:\n    public function setInputFilter(InputFilterInterface $inputFilter)\n    {\n        throw new \\Exception(\"Not used\");\n    }\n\n    public function getInputFilter()\n    {\n        if (!$this->inputFilter) {\n            $inputFilter = new InputFilter();\n            $factory = new InputFactory();\n\n            $inputFilter->add($factory->createInput(array(\n                'name' => 'id',\n                'required' => true,\n                'filters' => array(\n                    array('name' => 'Int'),\n                ),\n            )));\n\n            $inputFilter->add($factory->createInput(array(\n                'name' => 'artist',\n                'required' => true,\n                'filters' => array(\n                    array('name' => 'StripTags'),\n                    array('name' => 'StringTrim'),\n                ),\n                'validators' => array(\n                    array(\n                        'name' => 'StringLength',\n                        'options' => array(\n                            'encoding' => 'UTF-8',\n                            'min' => 1,\n                            'max' => 100,\n                        ),\n                    ),\n                ),\n            )));\n\n            $inputFilter->add($factory->createInput(array(\n                'name' => 'title',\n                'required' => true,\n                'filters' => array(\n                    array('name' => 'StripTags'),\n                    array('name' => 'StringTrim'),\n                ),\n                'validators' => array(\n                    array(\n                        'name' => 'StringLength',\n                        'options' => array(\n                            'encoding' => 'UTF-8',\n                            'min' => 1,\n                            'max' => 100,\n                        ),\n                    ),\n                ),\n            )));\n\n            $this->inputFilter = $inputFilter;\n        }\n\n        return $this->inputFilter;\n    }"],[0,"\n}"]],"start1":706,"start2":706,"length1":14,"length2":2139}]],"length":2845,"saved":false}
